/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/use-shopping-cart";
exports.ids = ["vendor-chunks/use-shopping-cart"];
exports.modules = {

/***/ "(ssr)/./node_modules/use-shopping-cart/dist/react.js":
/*!******************************************************!*\
  !*** ./node_modules/use-shopping-cart/dist/react.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n'use client';\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar toolkit = __webpack_require__(/*! @reduxjs/toolkit */ \"(ssr)/./node_modules/@reduxjs/toolkit/dist/index.js\");\nvar uuid = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm-node/index.js\");\nvar reduxPersist = __webpack_require__(/*! redux-persist */ \"(ssr)/./node_modules/redux-persist/lib/index.js\");\n__webpack_require__(/*! @stripe/stripe-js */ \"(ssr)/./node_modules/@stripe/stripe-js/dist/stripe.js\");\nvar reactRedux = __webpack_require__(/*! react-redux */ \"(ssr)/./node_modules/react-redux/lib/index.js\");\nvar react = __webpack_require__(/*! redux-persist/integration/react */ \"(ssr)/./node_modules/redux-persist/lib/integration/react.js\");\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nconst isClient = typeof window === 'object';\n\nconst formatCurrencyString = ({\r\n  value,\r\n  currency,\r\n  language = isClient ? navigator.language : 'en-US'\r\n}) => {\r\n  const numberFormat = new Intl.NumberFormat(language, {\r\n    style: 'currency',\r\n    currency,\r\n    currencyDisplay: 'symbol'\r\n  });\r\n  const parts = numberFormat.formatToParts(value);\r\n  let zeroDecimalCurrency = true;\r\n\r\n  for (const part of parts) {\r\n    if (part.type === 'decimal') {\r\n      zeroDecimalCurrency = false;\r\n      break\r\n    }\r\n  }\r\n\r\n  value = zeroDecimalCurrency ? value : parseFloat((value / 100).toFixed(2));\r\n  return numberFormat.format(value)\r\n};\r\n\r\nfunction updateFormattedTotalPrice(state) {\r\n  state.formattedTotalPrice = formatCurrencyString({\r\n    value: state.totalPrice,\r\n    currency: state.currency,\r\n    language: state.language\r\n  });\r\n}\r\n\r\nfunction updateFormattedValue(state, id) {\r\n  state.cartDetails[id].formattedValue = formatCurrencyString({\r\n    value: state.cartDetails[id].value,\r\n    currency: state.currency,\r\n    language: state.language\r\n  });\r\n}\r\n\r\nfunction updateFormattedPrice(state, id) {\r\n  state.cartDetails[id].formattedPrice = formatCurrencyString({\r\n    value: state.cartDetails[id].price,\r\n    currency: state.currency,\r\n    language: state.language\r\n  });\r\n}\r\n\r\nfunction Entry({ id, product, quantity, price_metadata, product_metadata }) {\r\n  return {\r\n    ...product,\r\n    id,\r\n    quantity,\r\n    value: product.price * quantity,\r\n    price_data: {\r\n      ...product.price_data,\r\n      ...price_metadata\r\n    },\r\n    product_data: {\r\n      ...product.product_data,\r\n      ...product_metadata\r\n    }\r\n  }\r\n}\r\n\r\nfunction createEntry({\r\n  state,\r\n  id,\r\n  product,\r\n  count,\r\n  price_metadata,\r\n  product_metadata\r\n}) {\r\n  const entry = Entry({\r\n    id,\r\n    product,\r\n    quantity: count,\r\n    price_metadata,\r\n    product_metadata\r\n  });\r\n\r\n  state.cartDetails[id] = entry;\r\n  updateFormattedValue(state, id);\r\n  updateFormattedPrice(state, id);\r\n\r\n  state.totalPrice += entry.value;\r\n  state.cartCount += count;\r\n  updateFormattedTotalPrice(state);\r\n}\r\n\r\nfunction updateEntry({\r\n  state,\r\n  id,\r\n  count,\r\n  price_metadata,\r\n  product_metadata\r\n}) {\r\n  const entry = state.cartDetails[id];\r\n  if (entry.quantity + count <= 0) return removeEntry({ state, id })\r\n\r\n  state.cartDetails[id] = Entry({\r\n    id,\r\n    state,\r\n    product: entry,\r\n    quantity: entry.quantity + count,\r\n    price_metadata,\r\n    product_metadata\r\n  });\r\n  updateFormattedValue(state, id);\r\n\r\n  state.totalPrice += entry.price * count;\r\n  state.cartCount += count;\r\n  updateFormattedTotalPrice(state);\r\n}\r\n\r\nfunction removeEntry({ state, id }) {\r\n  const cartDetails = state.cartDetails;\r\n  state.totalPrice -= cartDetails[id].value;\r\n  state.cartCount -= cartDetails[id].quantity;\r\n  delete cartDetails[id];\r\n  updateFormattedTotalPrice(state);\r\n}\r\n\r\nfunction updateQuantity({ state, id, quantity }) {\r\n  const entry = state.cartDetails[id];\r\n  updateEntry({\r\n    state,\r\n    id,\r\n    count: quantity - entry.quantity\r\n  });\r\n}\n\nconst initialState = {\r\n  cartMode: 'checkout-session',\r\n  mode: 'payment',\r\n  currency: 'USD',\r\n  language: isClient ? navigator.language : 'en-US',\r\n  lastClicked: '',\r\n  shouldDisplayCart: false,\r\n  cartCount: 0,\r\n  totalPrice: 0,\r\n  formattedTotalPrice: '',\r\n  cartDetails: {},\r\n  stripe: '',\r\n  shouldPersist: true\r\n};\r\n\r\nconst slice = toolkit.createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addItem: {\r\n      reducer(state, { payload: { product, options } }) {\r\n        const { count, price_metadata, product_metadata } = options;\r\n\r\n        const id =\r\n          product.id ||\r\n          product.price_id ||\r\n          product.sku_id ||\r\n          product.sku ||\r\n          uuid.v4();\r\n\r\n        if (id in state.cartDetails) {\r\n          updateEntry({\r\n            state,\r\n            id,\r\n            count,\r\n            price_metadata,\r\n            product_metadata\r\n          });\r\n        } else {\r\n          createEntry({\r\n            state,\r\n            id,\r\n            product,\r\n            count,\r\n            price_metadata,\r\n            product_metadata\r\n          });\r\n        }\r\n      },\r\n      prepare(product, options = { count: 1 }) {\r\n        if (!options.price_metadata) options.price_metadata = {};\r\n        if (!options.product_metadata) options.product_metadata = {};\r\n        if (!options.count) options.count = 1;\r\n        return { payload: { product, options } }\r\n      }\r\n    },\r\n    incrementItem: {\r\n      reducer(state, { payload: { id, options } }) {\r\n        updateEntry({\r\n          state,\r\n          id,\r\n          count: options.count\r\n        });\r\n      },\r\n      prepare(id, options = { count: 1 }) {\r\n        return { payload: { id, options } }\r\n      }\r\n    },\r\n    decrementItem: {\r\n      reducer(state, { payload: { id, options } }) {\r\n        if (state.cartDetails[id].quantity - options.count <= 0)\r\n          return removeEntry({ state, id })\r\n\r\n        updateEntry({\r\n          state,\r\n          id,\r\n          count: -options.count\r\n        });\r\n      },\r\n      prepare(id, options = { count: 1 }) {\r\n        return { payload: { id, options } }\r\n      }\r\n    },\r\n    clearCart: {\r\n      reducer(state) {\r\n        state.cartCount = 0;\r\n        state.totalPrice = 0;\r\n        state.cartDetails = {};\r\n        updateFormattedTotalPrice(state);\r\n      }\r\n    },\r\n    setItemQuantity: {\r\n      reducer(state, { payload: { id, quantity } }) {\r\n        if (quantity > 0 && id in state.cartDetails)\r\n          return updateQuantity({ ...state, state, id, quantity })\r\n        else if (quantity === 0) return removeEntry({ state, id })\r\n      },\r\n      prepare(id, quantity) {\r\n        return { payload: { id, quantity } }\r\n      }\r\n    },\r\n    removeItem: {\r\n      reducer(state, { payload: { id } }) {\r\n        removeEntry({ state, id });\r\n      },\r\n      prepare(id) {\r\n        return { payload: { id } }\r\n      }\r\n    },\r\n    loadCart: {\r\n      reducer(state, { payload: { cartDetails, shouldMerge } }) {\r\n        if (!shouldMerge) {\r\n          state.cartCount = 0;\r\n          state.totalPrice = 0;\r\n          state.cartDetails = {};\r\n        }\r\n\r\n        for (const id in cartDetails) {\r\n          const entry = cartDetails[id];\r\n          createEntry({\r\n            state,\r\n            id: entry.id,\r\n            product: entry,\r\n            count: entry.quantity\r\n          });\r\n        }\r\n      },\r\n      prepare(cartDetails, shouldMerge = true) {\r\n        return { payload: { cartDetails, shouldMerge } }\r\n      }\r\n    },\r\n    handleCartHover(state) {\r\n      state.shouldDisplayCart = true;\r\n    },\r\n    handleCartClick(state) {\r\n      state.shouldDisplayCart = !state.shouldDisplayCart;\r\n    },\r\n    handleCloseCart(state) {\r\n      state.shouldDisplayCart = false;\r\n    },\r\n    storeLastClicked(state, { payload }) {\r\n      state.lastClicked = payload;\r\n    },\r\n    changeStripeKey(state, { payload }) {\r\n      state.stripe = payload;\r\n    },\r\n    changeLanguage(state, { payload }) {\r\n      state.language = payload;\r\n    },\r\n    changeCurrency(state, { payload }) {\r\n      state.currency = payload;\r\n    }\r\n  }\r\n});\r\n\r\nslice.actions.redirectToCheckout = (sessionId) => ({\r\n  type: 'cart/redirectToCheckout',\r\n  payload: { sessionId }\r\n});\r\nslice.actions.checkoutSingleItem = (itemsOrPriceId) => {\r\n  const quantity = itemsOrPriceId.quantity || 1;\r\n\r\n  const cartItems = (() => {\r\n    if (typeof itemsOrPriceId === 'string') {\r\n      return {\r\n        lineItems: [\r\n          {\r\n            price: itemsOrPriceId,\r\n            quantity\r\n          }\r\n        ]\r\n      }\r\n    }\r\n    if (Object.prototype.hasOwnProperty.call(itemsOrPriceId, 'price')) {\r\n      return {\r\n        lineItems: [\r\n          {\r\n            price: itemsOrPriceId.price,\r\n            quantity\r\n          }\r\n        ]\r\n      }\r\n    }\r\n    /**\r\n     * Backward compatibility (SKU)\r\n     */\r\n    if (Object.prototype.hasOwnProperty.call(itemsOrPriceId, 'sku')) {\r\n      return {\r\n        items: [\r\n          {\r\n            sku: itemsOrPriceId.sku,\r\n            quantity\r\n          }\r\n        ]\r\n      }\r\n    }\r\n    return []\r\n  })();\r\n\r\n  return {\r\n    type: 'cart/checkoutSingleItem',\r\n    payload: {\r\n      cartItems\r\n    }\r\n  }\r\n};\r\n\r\nconst { reducer, actions } = slice;\n\n/**\r\n * Returns the constructor name of any value.\r\n * @param {any} value\r\n * @returns string\r\n */\r\nfunction typeOf(value) {\r\n  if (value === undefined) return 'undefined'\r\n  if (value === null) return 'null'\r\n  return value.constructor.name\r\n}\r\n\r\nclass PropertyValueError extends Error {\r\n  constructor({ property, method, expected, received }) {\r\n    const plural = Array.isArray(expected);\r\n    const expectedString = plural\r\n      ? `are ${expected.map((v) => JSON.stringify(v)).join(', ')}`\r\n      : `is ${JSON.stringify(expected)}`;\r\n    const methodString = typeof method === 'string' ? ` in ${method}()` : '';\r\n    super(\r\n      `Invalid value ${JSON.stringify(\r\n        received\r\n      )} was received for ${property}. Valid ${\r\n        plural ? 'values' : 'value'\r\n      } for ${property}${methodString} ${expectedString}.`\r\n    );\r\n    this.name = 'PropertyValueError';\r\n  }\r\n}\r\n\r\nclass PropertyTypeError extends TypeError {\r\n  constructor({ property, expected, received }) {\r\n    const plural = Array.isArray(expected);\r\n    const expectedString = plural\r\n      ? `are ${expected.map((v) => JSON.stringify(v)).join(', ')}`\r\n      : `is ${JSON.stringify(expected)}`;\r\n    super(\r\n      `Invalid value with type ${JSON.stringify(\r\n        received\r\n      )} was received for ${property}. Valid ${\r\n        plural ? 'types' : 'type'\r\n      } for ${property} ${expectedString}.`\r\n    );\r\n    this.name = 'PropertyTypeError';\r\n  }\r\n}\r\n\r\nclass PropertyRangeError extends RangeError {\r\n  constructor({ property, between, below, above, received }) {\r\n    let expectedString;\r\n    if (Array.isArray(between))\r\n      expectedString = `between ${between[0]} and ${between[1]}`;\r\n    else if (['string', 'number'].includes(typeof below))\r\n      expectedString = `below ${below}`;\r\n    else if (['string', 'number'].includes(typeof above))\r\n      expectedString = `above ${above}`;\r\n\r\n    super(\r\n      `Invalid value ${JSON.stringify(\r\n        received\r\n      )} was received for ${property}. Valid range for ${property} is ${expectedString}.`\r\n    );\r\n    this.name = 'PropertyRangeError';\r\n  }\r\n}\n\nfunction _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }\r\nfunction getCheckoutData(cart) {\r\n  const lineItems = [];\r\n  for (const sku in cart.cartDetails)\r\n    lineItems.push({ price: sku, quantity: cart.cartDetails[sku].quantity });\r\n\r\n  const options = {\r\n    mode: cart.mode,\r\n    lineItems,\r\n    successUrl: cart.successUrl,\r\n    cancelUrl: cart.cancelUrl,\r\n    billingAddressCollection: cart.billingAddressCollection\r\n      ? 'required'\r\n      : 'auto',\r\n    submitType: 'auto'\r\n  };\r\n\r\n  if (_optionalChain([cart, 'access', _ => _.allowedCountries, 'optionalAccess', _2 => _2.length])) {\r\n    options.shippingAddressCollection = {\r\n      allowedCountries: cart.allowedCountries\r\n    };\r\n  }\r\n\r\n  return options\r\n}\r\n\r\nconst handleStripe = (store) => (next) => async (action) => {\r\n  const stripePublicKey = store.getState().stripe;\r\n  const cart = store.getState();\r\n\r\n  const checkout = ['cart/redirectToCheckout', 'cart/checkoutSingleItem'];\r\n  if (checkout.includes(action.type)) {\r\n    if (typeof stripePublicKey !== 'string') {\r\n      throw new PropertyTypeError({\r\n        property: 'stripe',\r\n        expected: 'string',\r\n        received: typeOf(stripePublicKey)\r\n      })\r\n    } else if (stripePublicKey.length === 0) {\r\n      throw new PropertyRangeError({\r\n        property: 'stripe.length',\r\n        above: 0,\r\n        received: stripePublicKey.length\r\n      })\r\n    }\r\n  }\r\n\r\n  if (action.type === 'cart/redirectToCheckout') {\r\n    const stripe = initializeStripe(stripePublicKey);\r\n    if (cart.cartMode === 'checkout-session') {\r\n      return stripe.redirectToCheckout({\r\n        sessionId: action.payload.sessionId\r\n      })\r\n    } else if (cart.cartMode === 'client-only') {\r\n      const checkoutData = getCheckoutData(cart);\r\n      return stripe.redirectToCheckout(checkoutData)\r\n    } else {\r\n      throw new PropertyValueError({\r\n        property: 'cartMode',\r\n        method: 'redirectToCheckout',\r\n        expected: ['client-only', 'checkout-session'],\r\n        received: cart.cartMode\r\n      })\r\n    }\r\n  } else if (action.type === 'cart/checkoutSingleItem') {\r\n    const stripe = initializeStripe(stripePublicKey);\r\n\r\n    if (cart.cartMode === 'client-only') {\r\n      const options = {\r\n        mode: cart.mode,\r\n        successUrl: cart.successUrl,\r\n        cancelUrl: cart.cancelUrl,\r\n        ...action.payload.cartItems\r\n      };\r\n      return stripe.redirectToCheckout(options)\r\n    } else {\r\n      throw new PropertyValueError({\r\n        property: 'cartMode',\r\n        method: 'checkoutSingleItem',\r\n        expected: 'client-only',\r\n        received: cart.cartMode\r\n      })\r\n    }\r\n  }\r\n\r\n  return next(action)\r\n};\r\n\r\nfunction initializeStripe(publicKey) {\r\n  try {\r\n    // eslint-disable-next-line no-undef\r\n    const stripe = Stripe(publicKey);\r\n    stripe.registerAppInfo({\r\n      name: 'use-shopping-cart',\r\n      version: \"3.1.8\",\r\n      url: 'https://useshoppingcart.com',\r\n      // eslint-disable-next-line camelcase\r\n      partner_id: 'pp_partner_H8MLmI3e9Oc3IK'\r\n    });\r\n    return stripe\r\n  } catch (error) {\r\n    console.error('Unable to initialize Stripe.');\r\n    throw error\r\n  }\r\n}\n\nconst handleWarnings = (store) => (next) => async (action) => {\r\n  const count = ['cart/addItem', 'cart/incrementItem', 'cart/decrementItem'];\r\n  if (\r\n    count.includes(action.type) &&\r\n    typeof action.payload.options.count !== 'number'\r\n  ) {\r\n    console.warn(\r\n      `Invalid count used with action ${\r\n        action.type\r\n      }: count must be a number. The current type is ${typeOf(\r\n        action.payload.options.count\r\n      )}.`,\r\n      action\r\n    );\r\n    return\r\n  }\r\n\r\n  const quantity = ['cart/setItemQuantity'];\r\n  if (quantity.includes(action.type)) {\r\n    if (typeof action.payload.quantity !== 'number') {\r\n      console.warn(\r\n        `Invalid quantity used with action ${\r\n          action.type\r\n        }: quantity must be a number. The current type is ${typeOf(\r\n          action.payload.quantity\r\n        )}.`,\r\n        action\r\n      );\r\n      return\r\n    } else if (action.payload.quantity < 0) {\r\n      console.warn(\r\n        `Invalid quantity used with action ${\r\n          action.type\r\n        }: quantity must be greater than zero. The current value is ${JSON.stringify(\r\n          action.payload.quantity\r\n        )}.`,\r\n        action\r\n      );\r\n      return\r\n    }\r\n  }\r\n\r\n  const id = ['cart/incrementItem', 'cart/decrementItem', 'cart/removeItem'];\r\n  if (\r\n    id.includes(action.type) &&\r\n    !(action.payload.id in store.getState().cartDetails)\r\n  ) {\r\n    console.warn(\r\n      `Invalid product ID used with action ${\r\n        action.type\r\n      }: the ID must already be in the cart. The current value is ${JSON.stringify(\r\n        action.payload.id\r\n      )}.`,\r\n      action\r\n    );\r\n    return\r\n  }\r\n\r\n  return next(action)\r\n};\n\nfunction _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }\r\nasync function filterCart(cartDetails, filter) {\r\n  const filteredCart = {};\r\n\r\n  for (const sku in cartDetails) {\r\n    const entry = cartDetails[sku];\r\n    if (await filter(entry)) filteredCart[sku] = entry;\r\n  }\r\n\r\n  return filteredCart\r\n}\r\n\r\nfunction noop() {}\r\nfunction createNoopStorage() {\r\n  return {\r\n    getItem: noop,\r\n    setItem: noop,\r\n    removeItem: noop\r\n  }\r\n}\r\n\r\nfunction createLocalStorage() {\r\n  return {\r\n    async getItem(key) {\r\n      return window.localStorage.getItem(key)\r\n    },\r\n    async setItem(key, value) {\r\n      return window.localStorage.setItem(key, value)\r\n    },\r\n    async removeItem(key) {\r\n      return window.localStorage.removeItem(key)\r\n    }\r\n  }\r\n}\r\n\r\nfunction createShoppingCartStore(options) {\r\n  options.shouldPersist = _nullishCoalesce(options.shouldPersist, () => ( true));\r\n\r\n  if (!isClient) {\r\n    return toolkit.configureStore({\r\n      reducer,\r\n      preloadedState: { ...initialState, ...options }\r\n    })\r\n  }\r\n  let storage;\r\n  if (isClient) storage = options.storage || createLocalStorage();\r\n  else storage = createNoopStorage();\r\n  delete options.storage;\r\n\r\n  const persistConfig = {\r\n    key: _nullishCoalesce(options.persistKey, () => ( 'root')),\r\n    version: 1,\r\n    storage,\r\n    whitelist: ['cartCount', 'totalPrice', 'formattedTotalPrice', 'cartDetails']\r\n  };\r\n  const persistedReducer = reduxPersist.persistReducer(persistConfig, reducer);\r\n\r\n  const newInitialState = { ...initialState, ...options };\r\n  updateFormattedTotalPrice(newInitialState);\r\n\r\n  return toolkit.configureStore({\r\n    reducer: options.shouldPersist ? persistedReducer : reducer,\r\n    preloadedState: newInitialState,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [reduxPersist.FLUSH, reduxPersist.REHYDRATE, reduxPersist.PAUSE, reduxPersist.PERSIST, reduxPersist.PURGE, reduxPersist.REGISTER],\r\n          ignoredActionPaths: ['persist']\r\n        }\r\n      }).concat(handleStripe, handleWarnings)\r\n  })\r\n}\n\nconst _jsxFileName = \"/Users/nickdejesus/Code/hooks/use-shopping-cart/use-shopping-cart/react/index.js\";const CartContext = React__namespace.createContext(initialState);\r\nconst useSelector = reactRedux.createSelectorHook(CartContext);\r\nconst useDispatch = reactRedux.createDispatchHook(CartContext);\r\n\r\nfunction CartProvider({ loading = null, children, ...props }) {\r\n  const store = React__namespace.useMemo(() => createShoppingCartStore(props), [props]);\r\n\r\n  if (isClient && props.shouldPersist) {\r\n    const persistor = reduxPersist.persistStore(store);\r\n\r\n    return (\r\n      React__namespace.createElement(reactRedux.Provider, { context: CartContext, store: store, __self: this, __source: {fileName: _jsxFileName, lineNumber: 29}}\n        , React__namespace.createElement(react.PersistGate, {\r\n          persistor: persistor,\r\n          children: (bootstrapped) => {\r\n            if (!bootstrapped) return loading\r\n            return children\r\n          }, __self: this, __source: {fileName: _jsxFileName, lineNumber: 30}}\r\n        )\n      )\r\n    )\r\n  } else if (isClient && !props.shouldPersist) {\r\n    return (\r\n      React__namespace.createElement(reactRedux.Provider, { context: CartContext, store: store, __self: this, __source: {fileName: _jsxFileName, lineNumber: 41}}\n        , children\n      )\r\n    )\r\n  }\r\n}\r\n\r\nfunction useShoppingCart(\r\n  selector = (state) => ({ ...state }),\r\n  equalityFn\r\n) {\r\n  const dispatch = useDispatch();\r\n  const cartState = useSelector(selector, equalityFn);\r\n\r\n  const shoppingCart = React__namespace.useMemo(() => {\r\n    const cartActions = toolkit.bindActionCreators(actions, dispatch);\r\n    return { ...cartState, ...cartActions }\r\n  }, [cartState, dispatch]);\r\n\r\n  React__namespace.useDebugValue(shoppingCart);\r\n  return shoppingCart\r\n}\r\n\r\nfunction DebugCart(props) {\r\n  const cart = useShoppingCart((state) => state);\r\n  const cartPropertyRows = Object.entries(cart)\r\n    .filter(([, value]) => typeof value !== 'function')\r\n    .map(([key, value]) => (\r\n      React__namespace.createElement('tr', { key: key, __self: this, __source: {fileName: _jsxFileName, lineNumber: 69}}\n        , React__namespace.createElement('td', {__self: this, __source: {fileName: _jsxFileName, lineNumber: 70}}, key)\n        , React__namespace.createElement('td', {__self: this, __source: {fileName: _jsxFileName, lineNumber: 71}}\n          , typeof value === 'object' ? (\r\n            React__namespace.createElement('button', { onClick: () => console.log(value), __self: this, __source: {fileName: _jsxFileName, lineNumber: 73}}, \"Log value\" )\r\n          ) : (\r\n            JSON.stringify(value)\r\n          )\n        )\n      )\r\n    ));\r\n\r\n  return (\r\n    React__namespace.createElement('div', {\r\n      style: {\r\n        position: 'fixed',\r\n        top: 50,\r\n        right: 50,\r\n        backgroundColor: '#eee',\r\n        textAlign: 'left',\r\n        maxWidth: 300,\r\n        padding: 20,\r\n        borderSpacing: '25px 5px',\r\n        overflow: 'auto'\r\n      },\r\n      ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 82}}\r\n\n      , React__namespace.createElement('table', {__self: this, __source: {fileName: _jsxFileName, lineNumber: 96}}\n        , React__namespace.createElement('thead', {__self: this, __source: {fileName: _jsxFileName, lineNumber: 97}}\n          , React__namespace.createElement('tr', {__self: this, __source: {fileName: _jsxFileName, lineNumber: 98}}\n            , React__namespace.createElement('th', {__self: this, __source: {fileName: _jsxFileName, lineNumber: 99}}, \"Key\")\n            , React__namespace.createElement('th', {__self: this, __source: {fileName: _jsxFileName, lineNumber: 100}}, \"Value\")\n          )\n        )\n        , React__namespace.createElement('tbody', {__self: this, __source: {fileName: _jsxFileName, lineNumber: 103}}, cartPropertyRows)\n      )\n    )\r\n  )\r\n}\n\nexports.CartContext = CartContext;\nexports.CartProvider = CartProvider;\nexports.DebugCart = DebugCart;\nexports.actions = actions;\nexports.filterCart = filterCart;\nexports.formatCurrencyString = formatCurrencyString;\nexports.useDispatch = useDispatch;\nexports.useSelector = useSelector;\nexports.useShoppingCart = useShoppingCart;\n//# sourceMappingURL=react.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-shopping-cart/dist/react.js\n");

/***/ })

};
;